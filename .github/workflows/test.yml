name: Tests

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  tests:
    strategy:
      matrix:
        env:
          - { NPROC: 2 }
        # platform: [macos-latest, ubuntu-latest, windows-latest]
        platform: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    env: ${{ matrix.env }}

    name: ${{ matrix.platform }} - ${{ matrix.env.NPROC }} processes

    steps:
      - name: Install Scoop
        if: startsWith(matrix.platform, 'windows')
        shell: powershell
        run: |
            iwr -useb get.scoop.sh | iex

      - name: Install external dependencies with Scoop
        if: startsWith(matrix.platform, 'windows')
        shell: bash
        run: |
          export PATH="${PATH}:${HOME}/scoop/shims"
          scoop install 7zip openssl-mingw wget

      - name: Fetch mingw build of libpcre
        if: startsWith(matrix.platform, 'windows')
        shell: bash
        run: |
          export PATH="${PATH}:${HOME}/scoop/shims"
          cd "${HOME}/Downloads"
          wget https://repo.msys2.org/mingw/x86_64/mingw-w64-x86_64-pcre-8.44-1-any.pkg.tar.xz
          7z x mingw*
          tar xvf mingw*.tar

      - name: Checkout code
        uses: actions/checkout@v2

      # We need to do this because of how github cache works
      - name: Initialize submodules
        shell: bash
        run: |
          git submodule update --init --recursive

      - name: Cache Nim compiler, status-go
        uses: actions/cache@v2
        with:
          path: |
            vendor/nimbus-build-system/vendor/Nim/bin
            vendor/status-go/build/bin
          key: ${{ runner.os }}-${{ matrix.env.NPROC }}-nim-${{ hashFiles('.gitmodules') }}

      - name: Install and build dependencies
        shell: bash
        run: |
          [[ ${{ matrix.platform }} = windows* ]] && export PATH="${PATH}:${HOME}/scoop/shims"
          export M="$(which mingw32-make || echo make)"
          "${M}" -j${NPROC} NIMFLAGS="--parallelBuild:${NPROC}" V=1 update
          "${M}" -j${NPROC} NIMFLAGS="--parallelBuild:${NPROC}" V=1 deps

      - name: Run Nim tests (static)
        shell: bash
        run: |
          [[ ${{ matrix.platform }} = macos* ]] && \
            mkdir -p "${HOME}/.local/bin" && \
            cd "${HOME}/.local/bin" && \
            ln -f -s /usr/local/Cellar/llvm/*/bin/llvm-ar ./ar && \
            export PATH="$(pwd):${PATH}" && \
            cd - && \
            PCRE_INCLUDE_DIR=/usr/local/opt/pcre/include && \
            PCRE_LIB_DIR=/usr/local/opt/pcre/lib && \
            SSL_INCLUDE_DIR=/usr/local/opt/openssl@1.1/include && \
            SSL_LIB_DIR=/usr/local/opt/openssl@1.1/lib
          [[ ${{ matrix.platform }} = windows* ]] && \
            export PATH="${PATH}:${HOME}/scoop/shims" && \
            PCRE_INCLUDE_DIR="${HOME}/Downloads/mingw64/include" && \
            PCRE_LIB_DIR="${HOME}/Downloads/mingw64/lib" && \
            SSL_INCLUDE_DIR="${HOME}/scoop/apps/openssl-mingw/current/include" && \
            SSL_LIB_DIR="${HOME}/scoop/apps/openssl-mingw/current/lib"
          export M="$(which mingw32-make || echo make)"
          rm -rf nimcache
          "${M}" -j${NPROC} NIMFLAGS="--parallelBuild:${NPROC}" \
                            PCRE_INCLUDE_DIR="${PCRE_INCLUDE_DIR}" \
                            PCRE_LIB_DIR="${PCRE_LIB_DIR}" \
                            SSL_INCLUDE_DIR="${SSL_INCLUDE_DIR}" \
                            SSL_LIB_DIR="${SSL_LIB_DIR}" \
                            V=1 \
                            test-nim

      - name: Run Nim tests (shared)
        shell: bash
        run: |
          [[ ${{ matrix.platform }} = macos* ]] && \
            mkdir -p "${HOME}/.local/bin" && \
            cd "${HOME}/.local/bin" && \
            ln -f -s /usr/local/Cellar/llvm/*/bin/llvm-ar ./ar && \
            export PATH="$(pwd):${PATH}" && \
            cd - && \
            PCRE_INCLUDE_DIR=/usr/local/opt/pcre/include && \
            PCRE_LIB_DIR=/usr/local/opt/pcre/lib && \
            SSL_INCLUDE_DIR=/usr/local/opt/openssl@1.1/include && \
            SSL_LIB_DIR=/usr/local/opt/openssl@1.1/lib
          [[ ${{ matrix.platform }} = windows* ]] && \
            export PATH="${PATH}:${HOME}/scoop/shims" && \
            PCRE_INCLUDE_DIR="${HOME}/Downloads/mingw64/include" && \
            PCRE_LIB_DIR="${HOME}/Downloads/mingw64/lib" && \
            SSL_INCLUDE_DIR="${HOME}/scoop/apps/openssl-mingw/current/include" && \
            SSL_LIB_DIR="${HOME}/scoop/apps/openssl-mingw/current/lib"
          export M="$(which mingw32-make || echo make)"
          rm -rf nimcache
          "${M}" -j${NPROC} NIMFLAGS="--parallelBuild:${NPROC}" \
                            PCRE_INCLUDE_DIR="${PCRE_INCLUDE_DIR}" \
                            PCRE_LIB_DIR="${PCRE_LIB_DIR}" \
                            SSL_INCLUDE_DIR="${SSL_INCLUDE_DIR}" \
                            SSL_LIB_DIR="${SSL_LIB_DIR}" \
                            PCRE_STATIC=false \
                            SSL_STATIC=false \
                            V=1 \
                            test-nim

      - name: Run C tests (static)
        shell: bash
        run: |
          [[ ${{ matrix.platform }} = macos* ]] && \
            mkdir -p "${HOME}/.local/bin" && \
            cd "${HOME}/.local/bin" && \
            ln -f -s /usr/local/Cellar/llvm/*/bin/llvm-ar ./ar && \
            export PATH="$(pwd):${PATH}" && \
            cd - && \
            PCRE_INCLUDE_DIR=/usr/local/opt/pcre/include && \
            PCRE_LIB_DIR=/usr/local/opt/pcre/lib && \
            SSL_INCLUDE_DIR=/usr/local/opt/openssl@1.1/include && \
            SSL_LIB_DIR=/usr/local/opt/openssl@1.1/lib
          [[ ${{ matrix.platform }} = windows* ]] && \
            export PATH="${PATH}:${HOME}/scoop/shims" && \
            PCRE_INCLUDE_DIR="${HOME}/Downloads/mingw64/include" && \
            PCRE_LIB_DIR="${HOME}/Downloads/mingw64/lib" && \
            SSL_INCLUDE_DIR="${HOME}/scoop/apps/openssl-mingw/current/include" && \
            SSL_LIB_DIR="${HOME}/scoop/apps/openssl-mingw/current/lib"
          rm -rf nimcache
          export M="$(which mingw32-make || echo make)"
          "${M}" -j${NPROC} NIMFLAGS="--parallelBuild:${NPROC}" \
                            PCRE_INCLUDE_DIR="${PCRE_INCLUDE_DIR}" \
                            PCRE_LIB_DIR="${PCRE_LIB_DIR}" \
                            SSL_INCLUDE_DIR="${SSL_INCLUDE_DIR}" \
                            SSL_LIB_DIR="${SSL_LIB_DIR}" \
                            V=1 \
                            test-c

      - name: Run C tests (shared)
        shell: bash
        run: |
          [[ ${{ matrix.platform }} = macos* ]] && \
            mkdir -p "${HOME}/.local/bin" && \
            cd "${HOME}/.local/bin" && \
            ln -f -s /usr/local/Cellar/llvm/*/bin/llvm-ar ./ar && \
            export PATH="$(pwd):${PATH}" && \
            cd - && \
            PCRE_INCLUDE_DIR=/usr/local/opt/pcre/include && \
            PCRE_LIB_DIR=/usr/local/opt/pcre/lib && \
            SSL_INCLUDE_DIR=/usr/local/opt/openssl@1.1/include && \
            SSL_LIB_DIR=/usr/local/opt/openssl@1.1/lib
          [[ ${{ matrix.platform }} = windows* ]] && \
            export PATH="${PATH}:${HOME}/scoop/shims" && \
            PCRE_INCLUDE_DIR="${HOME}/Downloads/mingw64/include" && \
            PCRE_LIB_DIR="${HOME}/Downloads/mingw64/lib" && \
            SSL_INCLUDE_DIR="${HOME}/scoop/apps/openssl-mingw/current/include" && \
            SSL_LIB_DIR="${HOME}/scoop/apps/openssl-mingw/current/lib"
          rm -rf nimcache
          export M="$(which mingw32-make || echo make)"
          "${M}" -j${NPROC} NIMFLAGS="--parallelBuild:${NPROC}" \
                            PCRE_INCLUDE_DIR="${PCRE_INCLUDE_DIR}" \
                            PCRE_LIB_DIR="${PCRE_LIB_DIR}" \
                            SSL_INCLUDE_DIR="${SSL_INCLUDE_DIR}" \
                            SSL_LIB_DIR="${SSL_LIB_DIR}" \
                            PCRE_STATIC=false \
                            SSL_STATIC=false \
                            V=1 \
                            test-c
